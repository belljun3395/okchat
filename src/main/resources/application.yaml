spring:
    application:
        name:  ok-chat
    output:
        ansi:
            enabled: ALWAYS  # Enable colored output
    datasource:
        url: jdbc:mysql://localhost:13306/okchat?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: root
        password: root
        hikari:
            maximum-pool-size: 10
            minimum-idle: 2
            connection-timeout: 30000
            idle-timeout: 600000
            max-lifetime: 1800000
    data:
        redis:
            host: localhost
            port: 16379
    cloud:
        task:
            enabled: true  # Set to true to run as task mode
            initialize-enabled: true
            table-prefix: TASK_
            single-instance-enabled: true
    ai:
        retry:
            max-attempts: 5
            backoff:
                initial-interval: 2s
                multiplier: 2
                max-interval: 30s
        vectorstore:
            opensearch:
                host: localhost
                port: 9200
                scheme: http
                username: ''  # Leave empty for local development (security disabled)
                password: ''  # Leave empty for local development (security disabled)
                index-name: vector_store
                embedding-dimension: 1536
        openai:
            api-key: ${OPENAI_API_KEY}
            embedding:
                model: text-embedding-3-small
            chat:
                options:
                    model: gpt-4.1-mini
        mcp:
            client:
                stdio:
                    connections:
                        sequential-thinking:
                            command: npx
                            args:
                                - "-y"
                                - "@modelcontextprotocol/server-sequential-thinking"
                        memory:
                            command: npx
                            args:
                                - "-y"
                                - "@modelcontextprotocol/server-memory"

confluence:
    base-url: ${CONFLUENCE_BASE_URL}
    auth:
        type: BASIC
        email: ${CONFLUENCE_EMAIL}
        api-token: ${CONFLUENCE_API_TOKEN}

email:
    polling:
        interval: 60000
        initial-delay: 10000
    mail:
        protocol: imaps
        timeout: 10000
        connection-timeout: 10000
        debug: true
        debug-auth: true
        ssl:
            enabled: true
            trust: "*"

    providers:
        gmail:
            type: GMAIL
            host: imap.gmail.com
            port: 993
            username: ${GMAIL_USERNAME}
            auth-type: OAUTH2
            enabled: true
            oauth2:
                client-id: ${GMAIL_CLIENT_ID}
                client-secret: ${GMAIL_CLIENT_SECRET}
                tenant-id: ${GMAIL_TENANT_ID:common}
                scopes:
                    - https://mail.google.com/
                redirect-uri: http://localhost:8080/oauth2/callback

task:
    confluence-sync:
        enabled: false
    email-polling:
        enabled: false

# Hybrid search configuration
search:
    hybrid:
        keyword:
            text-weight: 0.7    # Favor text matching for keywords
            vector-weight: 0.3
        title:
            text-weight: 0.7    # Favor text matching for titles
            vector-weight: 0.3
        content:
            text-weight: 0.4    # Balance text and semantic for content
            vector-weight: 0.6
    fields:
        keyword:
            query-by: "metadata.keywords,metadata.title,content"
            weights: "10,5,1"   # Heavy weight on keywords field
        title:
            query-by: "metadata.title,content,metadata.keywords"
            weights: "10,3,1"   # Heavy weight on title field
        content:
            query-by: "content,metadata.title,metadata.keywords"
            weights: "10,5,3"   # Heavy weight on content field, title and keywords as supporting context
        path:
            query-by: "metadata.path,metadata.title,content"
            weights: "10,5,1"  # Heavy weight on path field
rag:
    confluence:
        chunking:
            strategy: RECURSIVE_CHARACTER  # Options: RECURSIVE_CHARACTER, SEMANTIC, SENTENCE_WINDOW
            chunk-size: 512
            chunk-overlap: 50
            min-chunk-size-chars: 350
            min-chunk-length-to-embed: 5
            max-num-chunks: 10000
            keep-separators: true
            semantic-similarity-threshold: 0.5
            sentence-window-size: 3

    rrf:
        k: 60.0
        keyword-weight: 1.0
        title-weight: 2.0  # Increased: Title matching (e.g., "250901") is most important for meeting records
        content-weight: 1.0
        date-boost-factor: 3.0  # Multiply RRF score when document title matches date keywords (e.g., "250804" in query date range)
        path-boost-factor: 2.0  # Multiply RRF score when document path hierarchy matches query intent (e.g., "팀회의" path for meeting queries)