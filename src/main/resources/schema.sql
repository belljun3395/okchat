-- Spring Cloud Task tables for MySQL

CREATE TABLE IF NOT EXISTS TASK_EXECUTION (
    TASK_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    START_TIME DATETIME(6) NULL,
    END_TIME DATETIME(6) NULL,
    TASK_NAME VARCHAR(100) NULL,
    EXIT_CODE INTEGER NULL,
    EXIT_MESSAGE TEXT NULL,
    ERROR_MESSAGE TEXT NULL,
    LAST_UPDATED DATETIME(6) NULL,
    EXTERNAL_EXECUTION_ID VARCHAR(255) NULL,
    PARENT_EXECUTION_ID BIGINT NULL
);

CREATE TABLE IF NOT EXISTS TASK_EXECUTION_PARAMS (
    TASK_EXECUTION_ID BIGINT NOT NULL,
    TASK_PARAM VARCHAR(250) NOT NULL,
    PRIMARY KEY (TASK_EXECUTION_ID, TASK_PARAM)
);

CREATE TABLE IF NOT EXISTS TASK_TASK_BATCH (
    TASK_EXECUTION_ID BIGINT NOT NULL,
    JOB_EXECUTION_ID BIGINT NOT NULL
);

CREATE TABLE IF NOT EXISTS TASK_EXECUTION_METADATA (
    ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    TASK_EXECUTION_ID BIGINT NOT NULL,
    TASK_EXECUTION_MANIFEST TEXT NULL
);

CREATE TABLE IF NOT EXISTS TASK_LOCK (
    LOCK_KEY VARCHAR(36) NOT NULL,
    REGION VARCHAR(100) NOT NULL,
    CLIENT_ID VARCHAR(36) NULL,
    CREATED_DATE DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    PRIMARY KEY (LOCK_KEY, REGION)
);

CREATE TABLE IF NOT EXISTS TASK_SEQ (
    ID BIGINT NOT NULL,
    UNIQUE_KEY CHAR(1) NOT NULL,
    CONSTRAINT UNIQUE_KEY_UN UNIQUE (UNIQUE_KEY)
);

INSERT INTO TASK_SEQ (ID, UNIQUE_KEY) SELECT * FROM (SELECT 0 AS ID, '0' AS UNIQUE_KEY) AS TMP WHERE NOT EXISTS(SELECT * FROM TASK_SEQ);
